service: api-tts

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  timeout: 29
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:us-east-1:381492005869:table/armazena-frases"

functions:
  hello:
    name: sprint46
    handler: handler.hello

  health:
    handler: handler.health
    events: 
      - httpApi:
          path: /
          method: get

  v1Description:
   handler: handler.v1Description
   events:
    - httpApi:
       path: /v1
       method: get

  v2Description:
   handler: handler.v2Description
   events:
    - httpApi:
       path: /v2
       method: get     
  
  parte1:
   handler: handler.parte1
   events:
    - httpApi:
       path: /v1/tts
       method: post 

  parte2:
    handler: handler.parte2
    events: 
      - httpApi:
          path: /v2/tts
          method: post

  parte3:
    handler: handler.parte3
    events: 
      - httpApi:
          path: /v3/tts
          method: post


plugins:
  - serverless-better-credentials
  - serverless-offline

# resources:
#   Resources:
#     MyDynamoDBTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: armazena-frases

#   iamRoleStatements:
#     - Effect: Allow
#       Action:
#         - dynamodb:DescribeTable
#         - dynamodb:Query
#         - dynamodb:Scan
#         - dynamodb:GetItem
#         - dynamodb:PutItem
#         - dynamodb:UpdateItem
#         - dynamodb:DeleteItem
#       Resource: "arn:aws:dynamodb:us-east-1:381492005869:table/armazena-frases"